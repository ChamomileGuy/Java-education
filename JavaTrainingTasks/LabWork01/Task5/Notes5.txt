Задание даёт поиграться с областями видимости и пакетами.

Не случайно классы объявлялись с модификатором default (package visible).
Доступ данным класса с модификатором default есть только изнутри класса или из классов, находящихся в том же пакете. 

В нашем случае раньше все классы были в одном файле, который не принадлежал явно какому-нибудь пакету. Поэтому все эти классы в файле были в пакете "unnamed".
А так как они были в одном пакете, классы могли взаимодействовать друг с другом, ведь модификатор доступа default позволяет взаимодействовать классам из одного пакета.

Когда мы перенесли реализацию второго класса в папку "myfirstpackage", мы тем самым создали новый пакет "myfirstpackage" с файлом под названием "MyFirstPackage.java".

Но из-за этого появилась проблема, что класс "MyFirstProgram" перестал видеть класс "MySecondClass". 

Действия для решения проблемы:
1) импортировать в "MyFirstProgram.java" классы из пакета строкой "import myfirstpackage.*;"
2) изменить область видимости класса "MySecondClass" на public, чтобы к нему можно было обращаться из другого класса, не входящего в пакет
3) изменить область видимости конструктора класса "MySecondClass" на public, чтобы создать объект из другого класса, не входящего в пакет
4) так как класс "MySecondClass" стал публичным, файл, содержащий этот класс, необходимо переименовать в "MySecondClass.java"

Поздравляем, программы заработала, вы прекрасны!

P.S.: Чтобы во время компиляции указать классу "MyFirstProgram.java", где ему искать нужный пакет, используется команда "javac -d out -sourcepath src ./src/MyFirstProgram.java"